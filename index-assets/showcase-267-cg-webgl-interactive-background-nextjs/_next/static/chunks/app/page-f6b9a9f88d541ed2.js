(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[974],{1398:(e,n,o)=>{Promise.resolve().then(o.bind(o,1824))},1824:(e,n,o)=>{"use strict";o.d(n,{default:()=>a});var i=o(5155),r=o(2115),u=o(3264),t=o(7431);let l="\n  varying vec2 vUv;\n  void main() {\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n  }\n",a=e=>{let{brushSize:n=25,brushStrength:o=.5,distortionAmount:a=2.5,fluidDecay:s=.98,trailLength:m=.8,stopDecay:v=.85,color1:f="#b8fff7",color2:c="#6e3466",color3:d="#0133ff",color4:h="#66d1fe",colorIntensity:w=1,softness:x=1}=e,g=(0,r.useRef)(null),p=(0,r.useRef)(null),C=(0,r.useRef)(null),y=(0,r.useRef)(null),F=e=>{let n=parseInt(e.slice(1,3),16)/255;return[n,parseInt(e.slice(3,5),16)/255,parseInt(e.slice(5,7),16)/255]};return(0,r.useEffect)(()=>{if(!g.current)return;for(;g.current.firstChild;)g.current.removeChild(g.current.firstChild);let e=new u.qUd(-1,1,1,-1,0,1),i=new t.JeP({antialias:!0});p.current=i,i.setSize(window.innerWidth,window.innerHeight),g.current.appendChild(i.domElement);let r=new u.nWS(window.innerWidth,window.innerHeight,{minFilter:u.k6q,magFilter:u.k6q,format:u.GWd,type:u.RQf}),S=new u.nWS(window.innerWidth,window.innerHeight,{minFilter:u.k6q,magFilter:u.k6q,format:u.GWd,type:u.RQf}),D=r,z=S,P=0,R=new u.BKk({uniforms:{iTime:{value:0},iResolution:{value:new u.I9Y(window.innerWidth,window.innerHeight)},iMouse:{value:new u.IUQ(0,0,0,0)},iFrame:{value:0},iPreviousFrame:{value:null},uBrushSize:{value:n},uBrushStrength:{value:o},uFluidDecay:{value:s},uTrailLength:{value:m},uStopDecay:{value:v}},vertexShader:l,fragmentShader:"\n  uniform float iTime;\n  uniform vec2 iResolution;\n  uniform vec4 iMouse;\n  uniform int iFrame;\n  uniform sampler2D iPreviousFrame;\n  uniform float uBrushSize;\n  uniform float uBrushStrength;\n  uniform float uFluidDecay;\n  uniform float uTrailLength;\n  uniform float uStopDecay;\n  varying vec2 vUv;\n  \n  vec2 ur, U;\n  \n  float ln(vec2 p, vec2 a, vec2 b) {\n      return length(p-a-(b-a)*clamp(dot(p-a,b-a)/dot(b-a,b-a),0.,1.));\n  }\n  \n  vec4 t(vec2 v, int a, int b) {\n      return texture2D(iPreviousFrame, fract((v+vec2(float(a),float(b)))/ur));\n  }\n  \n  vec4 t(vec2 v) {\n      return texture2D(iPreviousFrame, fract(v/ur));\n  }\n  \n  float area(vec2 a, vec2 b, vec2 c) {\n      float A = length(b-c), B = length(c-a), C = length(a-b), s = 0.5*(A+B+C);\n      return sqrt(s*(s-A)*(s-B)*(s-C));\n  }\n  \n  void main() {\n      U = vUv * iResolution;\n      ur = iResolution.xy;\n      \n      if (iFrame < 1) {\n          float w = 0.5+sin(0.2*U.x)*0.5;\n          float q = length(U-0.5*ur);\n          gl_FragColor = vec4(0.1*exp(-0.001*q*q),0,0,w);\n      } else {\n          vec2 v = U,\n               A = v + vec2( 1, 1),\n               B = v + vec2( 1,-1),\n               C = v + vec2(-1, 1),\n               D = v + vec2(-1,-1);\n          \n          for (int i = 0; i < 8; i++) {\n              v -= t(v).xy;\n              A -= t(A).xy;\n              B -= t(B).xy;\n              C -= t(C).xy;\n              D -= t(D).xy;\n          }\n          \n          vec4 me = t(v);\n          vec4 n = t(v, 0, 1),\n              e = t(v, 1, 0),\n              s = t(v, 0, -1),\n              w = t(v, -1, 0);\n          vec4 ne = .25*(n+e+s+w);\n          me = mix(t(v), ne, vec4(0.15,0.15,0.95,0.));\n          me.z = me.z - 0.01*((area(A,B,C)+area(B,C,D))-4.);\n          \n          vec4 pr = vec4(e.z,w.z,n.z,s.z);\n          me.xy = me.xy + 100.*vec2(pr.x-pr.y, pr.z-pr.w)/ur;\n          \n          me.xy *= uFluidDecay;\n          me.z *= uTrailLength;\n          \n          if (iMouse.z > 0.0) {\n              vec2 mousePos = iMouse.xy;\n              vec2 mousePrev = iMouse.zw;\n              vec2 mouseVel = mousePos - mousePrev;\n              float velMagnitude = length(mouseVel);\n              float q = ln(U, mousePos, mousePrev);\n              vec2 m = mousePos - mousePrev;\n              float l = length(m);\n              if (l > 0.0) m = min(l, 10.0) * m / l;\n              \n              float brushSizeFactor = 1e-4 / uBrushSize;\n              float strengthFactor = 0.03 * uBrushStrength;\n              \n              float falloff = exp(-brushSizeFactor*q*q*q);\n              falloff = pow(falloff, 0.5);\n              \n              me.xyw += strengthFactor * falloff * vec3(m, 10.);\n              \n              if (velMagnitude < 2.0) {\n                  float distToCursor = length(U - mousePos);\n                  float influence = exp(-distToCursor * 0.01);\n                  float cursorDecay = mix(1.0, uStopDecay, influence);\n                  me.xy *= cursorDecay;\n                  me.z *= cursorDecay;\n              }\n          }\n          \n          gl_FragColor = clamp(me, -0.4, 0.4);\n      }\n  }\n"}),B=new u.BKk({uniforms:{iTime:{value:0},iResolution:{value:new u.I9Y(window.innerWidth,window.innerHeight)},iFluid:{value:null},uDistortionAmount:{value:a},uColor1:{value:new u.Pq0(...F(f))},uColor2:{value:new u.Pq0(...F(c))},uColor3:{value:new u.Pq0(...F(d))},uColor4:{value:new u.Pq0(...F(h))},uColorIntensity:{value:w},uSoftness:{value:x}},vertexShader:l,fragmentShader:"\n  uniform float iTime;\n  uniform vec2 iResolution;\n  uniform sampler2D iFluid;\n  uniform float uDistortionAmount;\n  uniform vec3 uColor1;\n  uniform vec3 uColor2;\n  uniform vec3 uColor3;\n  uniform vec3 uColor4;\n  uniform float uColorIntensity;\n  uniform float uSoftness;\n  varying vec2 vUv;\n  \n  void main() {\n    vec2 fragCoord = vUv * iResolution;\n    \n    vec4 fluid = texture2D(iFluid, vUv);\n    vec2 fluidVel = fluid.xy;\n    \n    float mr = min(iResolution.x, iResolution.y);\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / mr;\n    \n    uv += fluidVel * (0.5 * uDistortionAmount);\n    \n    float d = -iTime * 0.5;\n    float a = 0.0;\n    for (float i = 0.0; i < 8.0; ++i) {\n      a += cos(i - d - a * uv.x);\n      d += sin(uv.y * i + a);\n    }\n    d += iTime * 0.5;\n    \n    float mixer1 = cos(uv.x * d) * 0.5 + 0.5;\n    float mixer2 = cos(uv.y * a) * 0.5 + 0.5;\n    float mixer3 = sin(d + a) * 0.5 + 0.5;\n    \n    float smoothAmount = clamp(uSoftness * 0.1, 0.0, 0.9);\n    mixer1 = mix(mixer1, 0.5, smoothAmount);\n    mixer2 = mix(mixer2, 0.5, smoothAmount);\n    mixer3 = mix(mixer3, 0.5, smoothAmount);\n    \n    vec3 col = mix(uColor1, uColor2, mixer1);\n    col = mix(col, uColor3, mixer2);\n    col = mix(col, uColor4, mixer3 * 0.4);\n    \n    col *= uColorIntensity;\n    \n    gl_FragColor = vec4(col, 1.0);\n  }\n"}),q=new u.bdM(2,2),b=new u.eaF(q,R),A=new u.eaF(q,B),T=0,U=0,E=0,M=0,k=0,I=e=>{if(!g.current)return;let n=g.current.getBoundingClientRect();E=T,M=U,T=e.clientX-n.left,U=n.height-(e.clientY-n.top),k=performance.now(),R.uniforms.iMouse.value.set(T,U,E,M)},L=()=>{R.uniforms.iMouse.value.set(0,0,0,0)},W=()=>{let e=window.innerWidth,n=window.innerHeight;i.setSize(e,n),R.uniforms.iResolution.value.set(e,n),B.uniforms.iResolution.value.set(e,n),r.setSize(e,n),S.setSize(e,n),P=0};document.addEventListener("mousemove",I),document.addEventListener("mouseleave",L),window.addEventListener("resize",W);let _=()=>{let r=.001*performance.now();R.uniforms.iTime.value=r,B.uniforms.iTime.value=r,R.uniforms.iFrame.value=P,performance.now()-k>100&&R.uniforms.iMouse.value.set(0,0,0,0),R.uniforms.uBrushSize.value=n,R.uniforms.uBrushStrength.value=o,R.uniforms.uFluidDecay.value=s,R.uniforms.uTrailLength.value=m,R.uniforms.uStopDecay.value=v,B.uniforms.uDistortionAmount.value=a,B.uniforms.uColorIntensity.value=w,B.uniforms.uSoftness.value=x,B.uniforms.uColor1.value.set(...F(f)),B.uniforms.uColor2.value.set(...F(c)),B.uniforms.uColor3.value.set(...F(d)),B.uniforms.uColor4.value.set(...F(h)),R.uniforms.iPreviousFrame.value=z.texture,i.setRenderTarget(D),i.render(b,e),B.uniforms.iFluid.value=D.texture,i.setRenderTarget(null),i.render(A,e);let u=D;D=z,z=u,P++,C.current=requestAnimationFrame(_)};return y.current={fluidTarget1:r,fluidTarget2:S,fluidMaterial:R,displayMaterial:B,geometry:q,handleMouseMove:I,handleMouseLeave:L,handleResize:W},_(),()=>{C.current&&cancelAnimationFrame(C.current),document.removeEventListener("mousemove",I),document.removeEventListener("mouseleave",L),window.removeEventListener("resize",W),i.domElement&&g.current&&g.current.removeChild(i.domElement),r.dispose(),S.dispose(),R.dispose(),B.dispose(),q.dispose(),i.dispose()}},[n,o,a,s,m,v,f,c,d,h,w,x]),(0,i.jsx)("div",{ref:g,className:"gradient-canvas"})}}},e=>{var n=n=>e(e.s=n);e.O(0,[367,831,441,684,358],()=>n(1398)),_N_E=e.O()}]);