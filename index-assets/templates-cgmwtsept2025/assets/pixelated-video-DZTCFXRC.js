import{b as f,L as m,C as v,O as T,P as g,D as w,R as y,F as M,N as C,S as D,a as E,c as S,M as F,W as G}from"./three.module-CTTR9sde.js";class c{constructor(){this.heroContainer=document.querySelector(".hero"),this.videoElement=document.querySelector(".hero-video"),!(!this.heroContainer||!this.videoElement)&&(this.isMobile=window.innerWidth<1e3,this.isDestroyed=!1,this.time=0,this.mouse={x:0,y:0,prevX:0,prevY:0,vX:0,vY:0},this.settings={grid:25,mouse:.25,strength:.1,relaxation:.925},this.init())}createVideoTexture(){return this.videoTexture=new f(this.videoElement),this.videoTexture.minFilter=m,this.videoTexture.magFilter=m,this.videoTexture.generateMipmaps=!1,this.videoTexture.wrapS=v,this.videoTexture.wrapT=v,this.videoTexture.flipY=!0,this.videoTexture}updateCameraAndGeometry(){this.width=this.heroContainer.offsetWidth,this.height=this.heroContainer.offsetHeight;const t=this.videoElement.videoWidth||1920,e=this.videoElement.videoHeight||1080,i=this.width/this.height,s=t/e;let a=1,o=1;i>s?o=i/s:a=s/i,this.camera=new T(-1,1,1,-1,.1,1e3),this.camera.position.z=1,this.planeGeometry=new g(2*a,2*o)}createCleanGrid(){const t=this.settings.grid,e=t*t*4,i=new Float32Array(e);for(let s=3;s<e;s+=4)i[s]=255;this.dataTexture=new w(i,t,t,y,M),this.dataTexture.magFilter=this.dataTexture.minFilter=C,this.material&&(this.material.uniforms.uDataTexture.value=this.dataTexture,this.material.uniforms.uDataTexture.value.needsUpdate=!0)}initializeScene(t){this.scene=new D,this.updateCameraAndGeometry(),this.createCleanGrid();const e=`
      varying vec2 vUv;
      void main() {
        vUv = uv;
        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
      }`,i=`
      uniform sampler2D uDataTexture;
      uniform sampler2D uTexture;
      varying vec2 vUv;
      void main() {
        vec4 offset = texture2D(uDataTexture, vUv);
        gl_FragColor = texture2D(uTexture, vUv - 0.02 * offset.rg);
      }`;this.material=new E({uniforms:{time:{value:0},uTexture:{value:t},uDataTexture:{value:this.dataTexture}},vertexShader:e,fragmentShader:i,side:S}),this.planeMesh=new F(this.planeGeometry,this.material),this.scene.add(this.planeMesh),this.renderer=new G({antialias:!0,alpha:!1}),this.renderer.setClearColor(0,1),this.renderer.setSize(this.width,this.height),this.renderer.setPixelRatio(Math.min(window.devicePixelRatio,2));const s=this.renderer.domElement;s.style.cssText="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:auto;z-index:0",this.videoElement.style.opacity="0",this.heroContainer.appendChild(s)}updateDataTexture(){if(!this.dataTexture||this.isMobile)return;const t=this.dataTexture.image.data,e=this.settings.grid,i=this.settings.relaxation;for(let r=0;r<t.length;r+=4)t[r]*=i,t[r+1]*=i;if(Math.abs(this.mouse.vX)<.001&&Math.abs(this.mouse.vY)<.001){this.mouse.vX*=.9,this.mouse.vY*=.9,this.dataTexture.needsUpdate=!0;return}const s=e*this.mouse.x,a=e*(1-this.mouse.y),o=e*this.settings.mouse,p=o*o,x=this.height/this.width,h=this.settings.strength*100;for(let r=0;r<e;r++)for(let n=0;n<e;n++){const d=(s-r)**2/x+(a-n)**2;if(d<p){const u=4*(r+e*n),l=Math.min(10,o/Math.sqrt(d));t[u]+=h*this.mouse.vX*l,t[u+1]-=h*this.mouse.vY*l}}this.mouse.vX*=.9,this.mouse.vY*=.9,this.dataTexture.needsUpdate=!0}handlePointerMove(t,e){if(this.isMobile)return;const i=this.heroContainer.getBoundingClientRect(),s=(t-i.left)/i.width,a=(e-i.top)/i.height;this.mouse.vX=s-this.mouse.prevX,this.mouse.vY=a-this.mouse.prevY,this.mouse.prevX=this.mouse.x,this.mouse.prevY=this.mouse.y,this.mouse.x=s,this.mouse.y=a}setupEvents(){this.isMobile||this.heroContainer.addEventListener("mousemove",e=>{this.handlePointerMove(e.clientX,e.clientY)});let t;window.addEventListener("resize",()=>{clearTimeout(t),t=setTimeout(()=>{this.isMobile=window.innerWidth<1e3,this.updateCameraAndGeometry(),this.planeMesh&&(this.planeMesh.geometry.dispose(),this.planeMesh.geometry=this.planeGeometry),this.renderer.setSize(this.width,this.height),this.createCleanGrid()},100)})}render(){this.isDestroyed||(this.time+=.05,this.updateDataTexture(),this.material.uniforms.time.value=this.time,this.videoTexture&&(this.videoTexture.needsUpdate=!0),this.renderer.render(this.scene,this.camera),requestAnimationFrame(()=>this.render()))}async init(){try{await new Promise(e=>{document.readyState==="complete"?e():window.addEventListener("load",e)}),await new Promise(e=>{this.videoElement.readyState>=2?e():this.videoElement.addEventListener("loadeddata",e)}),await new Promise(e=>setTimeout(e,100));const t=this.createVideoTexture();this.initializeScene(t),this.setupEvents(),this.render()}catch(t){console.error("Failed to initialize pixelated video effect:",t)}}destroy(){this.isDestroyed=!0,this.renderer&&this.renderer.dispose(),this.material&&this.material.dispose(),this.planeGeometry&&this.planeGeometry.dispose(),this.videoTexture&&this.videoTexture.dispose(),this.dataTexture&&this.dataTexture.dispose()}}document.readyState==="loading"?document.addEventListener("DOMContentLoaded",()=>new c):new c;
